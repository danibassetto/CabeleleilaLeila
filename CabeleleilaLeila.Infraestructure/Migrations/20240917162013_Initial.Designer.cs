// <auto-generated />
using System;
using CabeleleilaLeila.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CabeleleilaLeila.Infraestructure.Migrations
{
    [DbContext(typeof(CabeleleilaLeilaContext))]
    [Migration("20240917162013_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CabeleleilaLeila.Domain.Entities.Scheduling", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("CreationDate")
                        .IsRequired()
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_hora");

                    b.Property<string>("Observation")
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("observacao");

                    b.Property<int>("Service")
                        .HasColumnType("INT")
                        .HasColumnName("servico");

                    b.Property<int>("Status")
                        .HasColumnType("INT")
                        .HasColumnName("status");

                    b.Property<long>("UserId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("id_usuario");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("agendamento", (string)null);
                });

            modelBuilder.Entity("CabeleleilaLeila.Domain.Entities.User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("CreationDate")
                        .IsRequired()
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)")
                        .HasColumnName("email");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(13)")
                        .HasColumnName("celular");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("senha");

                    b.Property<int>("Type")
                        .HasColumnType("INT")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("CabeleleilaLeila.Domain.Entities.Scheduling", b =>
                {
                    b.HasOne("CabeleleilaLeila.Domain.Entities.User", "User")
                        .WithMany("ListScheduling")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CabeleleilaLeila.Domain.Entities.User", b =>
                {
                    b.Navigation("ListScheduling");
                });
#pragma warning restore 612, 618
        }
    }
}
